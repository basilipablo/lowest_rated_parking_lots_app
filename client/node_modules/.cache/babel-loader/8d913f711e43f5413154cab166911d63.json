{"ast":null,"code":"import axios from 'axios';\nexport function getParkings(location) {\n  const config = {\n    headers: {\n      \"Authorization\": \"Bearer \" + process.env.REACT_APP_YELP_API_KEY\n    },\n    params: {\n      limit: 6,\n      term: 'parking',\n      location: location,\n      offset: 0\n    }\n  };\n  return dispatch => {\n    return axios.get(\"https://api.yelp.com/v3/businesses/search\", JSON.stringify(config)).then(res => JSON.parse(res)).then(res => console.log(res)).then(res => {\n      dispatch({\n        type: 'GET_BUSINESS',\n        payload: res.data\n      });\n    }).catch(e => console.error(e));\n  };\n}","map":{"version":3,"sources":["/home/toshiba/Escritorio/Pablo/lowest_rated_parking_lots_app/src/app/actions.js"],"names":["axios","getParkings","location","config","headers","process","env","REACT_APP_YELP_API_KEY","params","limit","term","offset","dispatch","get","JSON","stringify","then","res","parse","console","log","type","payload","data","catch","e","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,WAAT,CAAqBC,QAArB,EAA+B;AAClC,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,uBAAiB,YAAYC,OAAO,CAACC,GAAR,CAAYC;AADpC,KADE;AAIXC,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE,CADH;AAEJC,MAAAA,IAAI,EAAE,SAFF;AAGJR,MAAAA,QAAQ,EAAEA,QAHN;AAIJS,MAAAA,MAAM,EAAE;AAJJ;AAJG,GAAf;AAWA,SAAQC,QAAD,IAAc;AACjB,WAAOZ,KAAK,CAACa,GAAN,CAAU,2CAAV,EAAuDC,IAAI,CAACC,SAAL,CAAeZ,MAAf,CAAvD,EACFa,IADE,CACGC,GAAG,IAAIH,IAAI,CAACI,KAAL,CAAWD,GAAX,CADV,EAEFD,IAFE,CAEGC,GAAG,IAAIE,OAAO,CAACC,GAAR,CAAYH,GAAZ,CAFV,EAGFD,IAHE,CAGGC,GAAG,IAAI;AACTL,MAAAA,QAAQ,CAAC;AACLS,QAAAA,IAAI,EAAE,cADD;AAELC,QAAAA,OAAO,EAAEL,GAAG,CAACM;AAFR,OAAD,CAAR;AAIH,KARE,EASFC,KATE,CASIC,CAAC,IAAIN,OAAO,CAACO,KAAR,CAAcD,CAAd,CATT,CAAP;AAUH,GAXD;AAYH","sourcesContent":["import axios from 'axios';\n\nexport function getParkings(location) {\n    const config = {\n        headers: {\n            \"Authorization\": \"Bearer \" + process.env.REACT_APP_YELP_API_KEY,\n        },\n        params: {\n            limit: 6,\n            term: 'parking',\n            location: location,\n            offset: 0,\n        }\n    }\n    return (dispatch) => {\n        return axios.get(\"https://api.yelp.com/v3/businesses/search\", JSON.stringify(config))\n            .then(res => JSON.parse(res))\n            .then(res => console.log(res))\n            .then(res => {\n                dispatch({\n                    type: 'GET_BUSINESS',\n                    payload: res.data\n                })\n            })\n            .catch(e => console.error(e))\n    }\n}\n"]},"metadata":{},"sourceType":"module"}