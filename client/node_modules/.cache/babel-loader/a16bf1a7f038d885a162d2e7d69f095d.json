{"ast":null,"code":"import axios from 'axios';\nexport function getParkings(location) {\n  const params = {\n    limit: 6,\n    term: 'parking',\n    location: location,\n    offset: 0,\n    Authorization: 'Bearer 7dq_mpXibH16XJ_nNT2Ynezgvd7B56kuJFPGF-37LD8f09jkZdx4-fU6s5PZARhEEUB-MTbIiKT1ZquJ5nFq1QG7T3WblddHPj26WJDry-mELsVFj2fnOTImxgH4YHYx'\n  };\n  return dispatch => {\n    return axios.get(\"https://api.yelp.com/v3/businesses/search\", {\n      params: params\n    }).then(res => JSON.parse(res)).then(res => console.log(res))\n    /*.then(res => {\n        dispatch({\n            type: 'GET_BUSINESS',\n            payload: res.data\n        })\n    })*/\n    .catch(e => console.error(e));\n  };\n}","map":{"version":3,"sources":["/home/toshiba/Escritorio/Pablo/lowest_rated_parking_lots_app/src/app/actions.js"],"names":["axios","getParkings","location","params","limit","term","offset","Authorization","dispatch","get","then","res","JSON","parse","console","log","catch","e","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,WAAT,CAAqBC,QAArB,EAA+B;AAClC,QAAMC,MAAM,GAAG;AACXC,IAAAA,KAAK,EAAE,CADI;AAEXC,IAAAA,IAAI,EAAE,SAFK;AAGXH,IAAAA,QAAQ,EAAEA,QAHC;AAIXI,IAAAA,MAAM,EAAE,CAJG;AAKXC,IAAAA,aAAa,EAAE;AALJ,GAAf;AAOA,SAAQC,QAAD,IAAc;AACjB,WAAOR,KAAK,CAACS,GAAN,CAAU,2CAAV,EAAuD;AACtDN,MAAAA,MAAM,EAAEA;AAD8C,KAAvD,EAGFO,IAHE,CAGGC,GAAG,IAAIC,IAAI,CAACC,KAAL,CAAWF,GAAX,CAHV,EAIFD,IAJE,CAIGC,GAAG,IAAIG,OAAO,CAACC,GAAR,CAAYJ,GAAZ,CAJV;AAKH;AACZ;AACA;AACA;AACA;AACA;AAVe,KAWFK,KAXE,CAWIC,CAAC,IAAIH,OAAO,CAACI,KAAR,CAAcD,CAAd,CAXT,CAAP;AAYH,GAbD;AAcH","sourcesContent":["import axios from 'axios';\n\nexport function getParkings(location) {\n    const params = {\n        limit: 6,\n        term: 'parking',\n        location: location,\n        offset: 0,\n        Authorization: 'Bearer 7dq_mpXibH16XJ_nNT2Ynezgvd7B56kuJFPGF-37LD8f09jkZdx4-fU6s5PZARhEEUB-MTbIiKT1ZquJ5nFq1QG7T3WblddHPj26WJDry-mELsVFj2fnOTImxgH4YHYx'\n    }\n    return (dispatch) => {\n        return axios.get(\"https://api.yelp.com/v3/businesses/search\", {\n                params: params\n            })\n            .then(res => JSON.parse(res))\n            .then(res => console.log(res))\n            /*.then(res => {\n                dispatch({\n                    type: 'GET_BUSINESS',\n                    payload: res.data\n                })\n            })*/\n            .catch(e => console.error(e))\n    }\n}"]},"metadata":{},"sourceType":"module"}