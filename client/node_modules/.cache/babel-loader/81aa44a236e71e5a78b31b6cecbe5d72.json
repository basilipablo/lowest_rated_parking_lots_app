{"ast":null,"code":"import axios from 'axios';\nexport function getParkings(location, offset) {\n  const params = {\n    location,\n    offset\n  };\n  return async dispatch => {\n    try {\n      const response = await axios.get(\"http://localhost:3001/business\", {\n        params: params\n      }); //console.log(response);\n\n      dispatch({\n        type: 'SET_BUSINESSES',\n        payload: response.data\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  /*\n  const data = {\n      limit: 6,\n      location,\n      offset: 0,\n      term: \"Parking\",\n  }\n   const config = {\n      headers: {\n          \"accept\": \"application/json\",\n          \"x-requested-with\": \"xmlhttprequest\",\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Authorization\": \"Bearer \" + process.env.REACT_APP_YELP_API_KEY,\n      }\n  }\n  return (dispatch) => {\n      return fetch(\"https://api.yelp.com/v3/businesses/search?limit=5&term=Parking &location=San Francisco&offset=4\", config)\n          .then(res => JSON.parse(res))\n          .then(res => console.log(res))\n          .then(res => {\n              dispatch({\n                  type: 'GET_BUSINESS',\n                  payload: res.data\n              })\n          })\n          .catch(e => console.error(e))\n  }*/\n}","map":{"version":3,"sources":["/home/toshiba/Escritorio/Pablo/lowest_rated_parking_lots_app/client/src/app/actions.js"],"names":["axios","getParkings","location","offset","params","dispatch","response","get","type","payload","data","error","console"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,MAA/B,EAAuC;AAC1C,QAAMC,MAAM,GAAG;AACXF,IAAAA,QADW;AAEXC,IAAAA;AAFW,GAAf;AAKA,SAAO,MAAOE,QAAP,IAAoB;AACvB,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,gCAAV,EAA4C;AAACH,QAAAA,MAAM,EAAEA;AAAT,OAA5C,CAAvB,CADA,CAEA;;AACAC,MAAAA,QAAQ,CAAC;AACLG,QAAAA,IAAI,EAAE,gBADD;AAELC,QAAAA,OAAO,EAAEH,QAAQ,CAACI;AAFb,OAAD,CAAR;AAIH,KAPD,CAOE,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ,GAXD;AAYA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC","sourcesContent":["import axios from 'axios';\n\nexport function getParkings(location, offset) {\n    const params = {\n        location,\n        offset\n    }\n\n    return async (dispatch) => {\n        try {\n            const response = await axios.get(\"http://localhost:3001/business\", {params: params})\n            //console.log(response);\n            dispatch({\n                type: 'SET_BUSINESSES',\n                payload: response.data\n            });\n        } catch (error) {\n            console.error(error)\n        }\n    }\n    /*\n    const data = {\n        limit: 6,\n        location,\n        offset: 0,\n        term: \"Parking\",\n    }\n\n    const config = {\n        headers: {\n            \"accept\": \"application/json\",\n            \"x-requested-with\": \"xmlhttprequest\",\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Authorization\": \"Bearer \" + process.env.REACT_APP_YELP_API_KEY,\n        }\n    }\n    return (dispatch) => {\n        return fetch(\"https://api.yelp.com/v3/businesses/search?limit=5&term=Parking &location=San Francisco&offset=4\", config)\n            .then(res => JSON.parse(res))\n            .then(res => console.log(res))\n            .then(res => {\n                dispatch({\n                    type: 'GET_BUSINESS',\n                    payload: res.data\n                })\n            })\n            .catch(e => console.error(e))\n    }*/\n}\n"]},"metadata":{},"sourceType":"module"}