{"ast":null,"code":"'use strict';\n\nconst http = require('http');\n\nconst https = require('https');\n\nconst url = require('url');\n\nconst typedError = require('error/typed');\n\nconst unknownProtocolErrorType = 'request-function/unknown-protocol';\nconst unknownProtocolError = typedError({\n  type: unknownProtocolErrorType,\n  message: \"Unknown protocol '{protocol}'\"\n});\n\nconst fromProtocol = protocol => {\n  switch (protocol) {\n    case 'http:':\n      return http.request;\n\n    case 'https:':\n      return https.request;\n\n    default:\n      throw unknownProtocolError({\n        protocol: protocol\n      });\n  }\n};\n\nconst fromUrl = urlString => {\n  const parsedUrl = url.parse(urlString);\n  return fromProtocol(parsedUrl.protocol);\n};\n\nmodule.exports = {\n  fromProtocol: fromProtocol,\n  fromUrl: fromUrl,\n  unknownProtocolErrorType: unknownProtocolErrorType\n};","map":{"version":3,"sources":["/home/toshiba/Escritorio/Pablo/lowest_rated_parking_lots_app/node_modules/request-function/index.js"],"names":["http","require","https","url","typedError","unknownProtocolErrorType","unknownProtocolError","type","message","fromProtocol","protocol","request","fromUrl","urlString","parsedUrl","parse","module","exports"],"mappings":"AAAA;;AACA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACA,MAAME,GAAG,GAAGF,OAAO,CAAC,KAAD,CAAnB;;AACA,MAAMG,UAAU,GAAGH,OAAO,CAAC,aAAD,CAA1B;;AAEA,MAAMI,wBAAwB,GAAG,mCAAjC;AAEA,MAAMC,oBAAoB,GAAGF,UAAU,CAAC;AACtCG,EAAAA,IAAI,EAAEF,wBADgC;AAEtCG,EAAAA,OAAO,EAAE;AAF6B,CAAD,CAAvC;;AAKA,MAAMC,YAAY,GAAIC,QAAD,IAAc;AACjC,UAAOA,QAAP;AACE,SAAK,OAAL;AACE,aAAOV,IAAI,CAACW,OAAZ;;AACF,SAAK,QAAL;AACE,aAAOT,KAAK,CAACS,OAAb;;AACF;AACE,YAAML,oBAAoB,CAAC;AACzBI,QAAAA,QAAQ,EAAEA;AADe,OAAD,CAA1B;AANJ;AAUD,CAXD;;AAaA,MAAME,OAAO,GAAIC,SAAD,IAAe;AAC7B,QAAMC,SAAS,GAAGX,GAAG,CAACY,KAAJ,CAAUF,SAAV,CAAlB;AACA,SAAOJ,YAAY,CAACK,SAAS,CAACJ,QAAX,CAAnB;AACD,CAHD;;AAKAM,MAAM,CAACC,OAAP,GAAiB;AACfR,EAAAA,YAAY,EAAEA,YADC;AAEfG,EAAAA,OAAO,EAAEA,OAFM;AAGfP,EAAAA,wBAAwB,EAAEA;AAHX,CAAjB","sourcesContent":["'use strict';\nconst http = require('http');\nconst https = require('https');\nconst url = require('url');\nconst typedError = require('error/typed');\n\nconst unknownProtocolErrorType = 'request-function/unknown-protocol';\n\nconst unknownProtocolError = typedError({\n  type: unknownProtocolErrorType,\n  message: \"Unknown protocol '{protocol}'\"\n});\n\nconst fromProtocol = (protocol) => {\n  switch(protocol){\n    case 'http:':\n      return http.request;\n    case 'https:':\n      return https.request;\n    default:\n      throw unknownProtocolError({\n        protocol: protocol\n      });\n  }\n};\n\nconst fromUrl = (urlString) => {\n  const parsedUrl = url.parse(urlString);\n  return fromProtocol(parsedUrl.protocol);\n};\n\nmodule.exports = {\n  fromProtocol: fromProtocol,\n  fromUrl: fromUrl,\n  unknownProtocolErrorType: unknownProtocolErrorType\n};"]},"metadata":{},"sourceType":"script"}